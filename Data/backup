
from PySide import QtCore, QtGui
import scipy.io
import math
import weakref
import scipy
from PIL import Image
import numpy as np

class dataProcessing(object):
	    def __init__(self, Brain_image_filename,SelectedElectrodes_filename,Electrode_ElectrodeData_filename,Electrode_mat_filename,ElectrodeSignals):
			self.im = Image.open(Brain_image_filename)
			self.syllableUnit = 0 
			self.timestep =0

			Data=scipy.io.loadmat(Electrode_ElectrodeData_filename)
			self.mat = scipy.io.loadmat(Electrode_mat_filename)

			# self.ElectrodeIds = scipy.io.loadmat(Electrode_mat_filename)
			# self.ElectodeData = scipy.io.loadmat(Electrode_mat_filename)


			self.ElectrodeIds = Data['electrode']
			self.ElectodeData = Data['C']

			# self.ElectodeData= scipy.io.loadmat(Electrode_data_filename)
			self.ElectrodeSignals = scipy.io.loadmat(ElectrodeSignals)
			
			assert len(self.ElectrodeIds[0]) == 54,  "The length is s(%d)" % len(self.ElectrodeIds[0])

			""" The variables names for the new connecivity matrices, 
			C == correlation matrix 
			syllable == 6 syllables

			time = mapping between electrodes
			electrode == 58 electrodes  
			"""





